upstream php-handler {
  server unix:/var/run/php5-fpm.sock;
  }
 
server {
  listen 80;
  server_name owncloud.andromeda.home;
  rewrite ^ https://$http_host$request_uri? permanent;    # force redirect http to https
  }
 
server { 
  listen 443;
  server_name owncloud.andromeda.home;
  ssl on;
  ssl_certificate        /etc/nginx/certs/andromeda.home/server.crt;
  ssl_certificate_key    /etc/nginx/certs/andromeda.home/server.key; 
  
  error_log /var/log/nginx/owncloud.error.log debug;
  access_log /var/log/nginx/owncloud.access.log; 

  # Add headers to serve security related headers
  add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Robots-Tag none;
  add_header X-Download-Options noopen;
  add_header X-Permitted-Cross-Domain-Policies none;
 
  # Path to the root of your installation
  root /var/www;
  
  index index.php index.html;
 
  # General PHP handler  
  location ~ \.php$ {
   include fastcgi_params;
   fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
   fastcgi_param HTTPS on;
   fastcgi_pass php-handler;
   }
   
   #
   # ownCloud
   #   
   rewrite ^/owncloud/caldav(.*)$ /owncloud/remote.php/caldav$1 redirect;
   rewrite ^/owncloud/carddav(.*)$ /owncloud/remote.php/carddav$1 redirect;
   rewrite ^/owncloud/webdav(.*)$ /owncloud/remote.php/webdav$1 redirect;
   
   location /owncloud {
    # set max upload size
    client_max_body_size 513M;
 
    fastcgi_buffers 64 4K;
 
    # Disable gzip to avoid the removal of the ETag header
    gzip off;
 
    # Uncomment if your server is build with the ngx_pagespeed module This module is currently not supported.
    # pagespeed off;
    
    error_page 403 /owncloud/core/templates/403.php;
    error_page 404 /owncloud/core/templates/404.php;
 
    # The following 2 rules are only needed with webfinger
    rewrite ^/owncloud/.well-known/host-meta /owncloud/public.php?service=host-meta last;
    rewrite ^/owncloud/.well-known/host-meta.json /owncloud/public.php?service=host-meta-json last;
    rewrite ^/owncloud/.well-known/carddav /owncloud/remote.php/carddav/ redirect;
    rewrite ^/owncloud/.well-known/caldav /owncloud/remote.php/caldav/ redirect;
 
    rewrite ^(/owncloud/core/doc/[^\/]+/)$ /owncloud/$1/index.html;
 
    try_files $uri $uri/ /owncloud/index.php;
 
     # ownCloud specific PHP handler
     location ~ \.php(?:$|/) {
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      include fastcgi_params;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_param PATH_INFO $fastcgi_path_info;
      fastcgi_param HTTPS on;
      fastcgi_param modHeadersAvailable true; #Avoid sending the security headers twice
      fastcgi_pass php-handler;
      fastcgi_read_timeout 300;
      fastcgi_param PHP_VALUE "open_basedir=/var/www:/tmp/:/home/kelghar/mount_point/share/_hide/owncloud/:/dev/urandom";
     }
   }  
   
   location = /owncloud/robots.txt {
    allow all;
    log_not_found off;
    access_log off;
   }
 
   location ~ ^/owncloud/(?:\.htaccess|data|config|db_structure\.xml|README){
    deny all;
   }
 
   # Optional: set long EXPIRES header on static assets
   location ~* ^/owncloud(/.+\.(?:jpg|jpeg|gif|bmp|ico|png|css|js|swf))$ {
    expires 30d;
    # Optional: Don't log access to assets
    access_log off;
   }
}
